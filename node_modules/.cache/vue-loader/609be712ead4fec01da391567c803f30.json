{"remainingRequest":"C:\\Users\\noorb\\OneDrive\\Desktop\\StarterKit-SDKWeb-VueJS-master\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\noorb\\OneDrive\\Desktop\\StarterKit-SDKWeb-VueJS-master\\src\\views\\ChatBot.vue?vue&type=style&index=0&id=078caa85&scoped=true&lang=scss&","dependencies":[{"path":"C:\\Users\\noorb\\OneDrive\\Desktop\\StarterKit-SDKWeb-VueJS-master\\src\\views\\ChatBot.vue","mtime":1587265662808},{"path":"C:\\Users\\noorb\\OneDrive\\Desktop\\StarterKit-SDKWeb-VueJS-master\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\noorb\\OneDrive\\Desktop\\StarterKit-SDKWeb-VueJS-master\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\noorb\\OneDrive\\Desktop\\StarterKit-SDKWeb-VueJS-master\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\noorb\\OneDrive\\Desktop\\StarterKit-SDKWeb-VueJS-master\\node_modules\\sass-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\noorb\\OneDrive\\Desktop\\StarterKit-SDKWeb-VueJS-master\\node_modules\\vuetify-loader\\lib\\loader.js","mtime":1574476662000},{"path":"C:\\Users\\noorb\\OneDrive\\Desktop\\StarterKit-SDKWeb-VueJS-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\noorb\\OneDrive\\Desktop\\StarterKit-SDKWeb-VueJS-master\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKDQouY2hhdC1ib3gtbGlzdCB7DQogIGRpc3BsYXk6IGZsZXg7DQogIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47DQogIGxpc3Qtc3R5bGUtdHlwZTogbm9uZTsNCiAgcGFkZGluZy1ib3R0b206IDkwcHg7DQp9DQouY2hhdC1ib3gtbGlzdC1jb250YWluZXIgew0KICBvdmVyZmxvdy15OiBzY3JvbGw7DQogIHNjcm9sbGJhci13aWR0aDogYXV0bzsNCiAgbWFyZ2luLWJvdHRvbTogMXB4Ow0KICBvdmVyZmxvdy14OiBoaWRkZW47DQp9DQouY2hhdC1ib3gtbGlzdCB7DQogIHBhZGRpbmctbGVmdDogMTBweDsNCiAgcGFkZGluZy1yaWdodDogMTBweDsNCiAgc3BhbiB7DQogICAgcGFkZGluZzogOHB4Ow0KICAgIGNvbG9yOiB3aGl0ZTsNCiAgICBib3JkZXItcmFkaXVzOiA0cHg7DQogIH0NCiAgLkJhbmsgew0KICAgIHNwYW4gew0KICAgICAgYmFja2dyb3VuZDogIzkzN2NjYTsNCiAgICAgIHBhZGRpbmc6IDE2cHg7DQogICAgICBkaXNwbGF5OiBncmlkOw0KICAgIH0NCiAgICBwIHsNCiAgICAgIGZsb2F0OiByaWdodDsNCiAgICB9DQogIH0NCiAgLmNsaWVudCB7DQogICAgc3BhbiB7DQogICAgICBiYWNrZ3JvdW5kOiAjNDhkMzgyOw0KICAgICAgcGFkZGluZzogMTZweDsNCiAgICAgIGRpc3BsYXk6IGdyaWQ7DQogICAgfQ0KICAgIC8vIHAgew0KICAgIC8vICAgZmxvYXQ6IGxlZnQ7DQogICAgLy8gfQ0KICB9DQogIC5BZ2VudCB7DQogICAgc3BhbiB7DQogICAgICBiYWNrZ3JvdW5kOiBzYWxtb247DQogICAgICBwYWRkaW5nOiAxNnB4Ow0KICAgICAgZGlzcGxheTogZ3JpZDsNCiAgICB9DQogICAgLy8gcCB7DQogICAgLy8gICBmbG9hdDogbGVmdDsNCiAgICAvLyB9DQogIH0NCn0NCi5CYW5rIHsNCiAgbWFyZ2luLXJpZ2h0OiBhdXRvICFpbXBvcnRhbnQ7DQp9DQouY2xpZW50IHsNCiAgbWFyZ2luLWxlZnQ6IGF1dG8gIWltcG9ydGFudDsNCn0NCi5BZ2VudCB7DQogIG1hcmdpbi1yaWdodDogYXV0byAhaW1wb3J0YW50Ow0KfQ0KLmhlYWRlciB7DQogIGJhY2tncm91bmQ6IHJnYigyLCAxMDYsIDE2Nyk7DQogIGNvbG9yOiAjZmZmOw0KICB0ZXh0LWFsaWduOiBjZW50ZXI7DQogIHBhZGRpbmc6IDIwcHg7DQp9DQouZm9vdGVyIHsNCiAgcG9zaXRpb246IGZpeGVkOw0KICBib3R0b206IDA7DQogIHdpZHRoOiAxMDAlOw0KICBoZWlnaHQ6IDUwcHg7DQogIHRleHQtYWxpZ246IGNlbnRlcjsNCiAgYmFja2dyb3VuZC1jb2xvcjogI2NjYzsNCn0NCi5pY29uIHsNCiAgbWFyZ2luLXJpZ2h0OiA2MDAwcHg7DQogIGZvbnQtc2l6ZTogODBweDsNCiAgaGVpZ2h0OiAyMHB4Ow0KICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlOw0KICBwYWRkaW5nOiA0MHB4IDQ1cHggNDBweCAzNXB4Ow0KICBsaW5lLWhlaWdodDogNXB4ICFpbXBvcnRhbnQ7DQogIHRvcDogMzBweDsNCiAgcG9zaXRpb246IHJlbGF0aXZlOw0KfQ0KLmljb24yIHsNCiAgbWFyZ2luLWxlZnQ6IDE1MDBweDsNCiAgZm9udC1zaXplOiA4MHB4Ow0KICBoZWlnaHQ6IDIwcHg7DQogIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7DQogIHBhZGRpbmc6IDQwcHggNDVweCA0MHB4IDM1cHg7DQogIGxpbmUtaGVpZ2h0OiA1cHggIWltcG9ydGFudDsNCiAgdG9wOiAzMHB4Ow0KICBwb3NpdGlvbjogcmVsYXRpdmU7DQp9DQojcG9wdXAgew0KICBwb3NpdGlvbjogYWJzb2x1dGU7DQogIHdpZHRoOiAzMDBweDsNCiAgaGVpZ2h0OiA3MDBweDsNCiAgei1pbmRleDogMTU7DQogIHRvcDogNTAlOw0KfQ0KLnN1Ym1pdCB7DQogIHBvc2l0aW9uOiBmaXhlZDsNCiAgYm90dG9tOiAyMHB4Ow0KICB3aWR0aDogNzBweDsNCiAgaGVpZ2h0OiAyMHB4OyAvKmhlaWdodDogYXV0bzsqLw0KICBtYXJnaW4tbGVmdDogNzUwcHg7DQogIGJvcmRlcjogMHB4IHNvbGlkICNkNmQ2ZDY7DQogIHotaW5kZXg6IDk5Ow0KICBwYWRkaW5nOiAwOw0KICBzaXplOiA1MDBweDsNCiAgdGV4dC1hbGlnbjogY2VudGVyOw0KfQ0KLnJhdGluZy10ZXh0IHsNCiAgZm9udC13ZWlnaHQ6IGJvbGQ7DQogIGZvbnQtc2l6ZTogMS45ZW07DQogIGJvcmRlcjogMXB4IHNvbGlkICNjZmNmY2Y7DQogIHBhZGRpbmctbGVmdDogMTBweDsNCiAgcGFkZGluZy1yaWdodDogMTBweDsNCiAgYm9yZGVyLXJhZGl1czogNXB4Ow0KICBjb2xvcjogIzk5OTsNCn0NCi5zdGFycyB7DQogIG1hcmdpbi1ib3R0b206IDkwcHg7DQogIG1hcmdpbi10b3A6IDUwcHg7DQp9DQpyb3V0ZXItbGluayB7DQogIHRleHQtZGVjb3JhdGlvbjogbm9uZTsNCn0NCg=="},{"version":3,"sources":["ChatBot.vue"],"names":[],"mappingsfile":"ChatBot.vue","sourceRoot":"src/views","sourcesContent":["<template>\r\n  <div class=\"chat\">\r\n    <transition name=\"fade\">\r\n      <Loading v-bind:isConnecting=\"isConnecting\" v-if=\"!start\" />\r\n    </transition>\r\n    <div class=\"chatBox\" id=\"chatBox\" ref=\"chatBox\">\r\n      <header class=\"header\">\r\n        <span class=\"icon\">\r\n          <v-btn :to=\"{ name: 'feedback' }\" x-large name=\"toHomebutton\">\r\n            <i id=\"fontHouse\" class=\"fas fa-house-user\" name=\"toHomebutton\" fa-4x>\r\n              <br />\r\n              <a>Home</a>\r\n            </i>\r\n          </v-btn>\r\n        </span>\r\n        <h2>Chatting</h2>\r\n      </header>\r\n      <v-card flat class=\"chat-box-list-container\" ref=\"chatbox\" fluid>\r\n        <ul class=\"chat-box-list\" style=\"word-break: keep-all\">\r\n          <li v-for=\"message in messages\" :key=\"message.text\" v-bind:class=\"message.author\">\r\n            <p>\r\n              <v-container>\r\n                <span>{{ message.text }}</span>\r\n              </v-container>\r\n            </p>\r\n            <v-card-subtitle class=\"white--text text-right pr-2 pb-1\">\r\n              {{ message.author }}\r\n              {{ message.time }}\r\n            </v-card-subtitle>\r\n          </li>\r\n        </ul>\r\n      </v-card>\r\n    </div>\r\n    <v-footer id=\"footer\" fixed width=\"100%\">\r\n      <v-textarea\r\n        auto-grow\r\n        name=\"msgbox\"\r\n        rows=\"2\"\r\n        placeholder=\"Start typing...\"\r\n        filled\r\n        type=\"text\"\r\n        v-model=\"txt\"\r\n      />\r\n      <v-btn name=\"msgbutton\" right height=\"60px\" @click=\"sendMessage\">Send</v-btn>\r\n      <i name=\"toCall\" class=\"fas fa-phone-square fa-3x\" @click=\"alert\"></i>\r\n    </v-footer>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport rainbowSDK from \"rainbow-web-sdk\";\r\nimport moment from \"moment\";\r\nimport axios from \"axios\";\r\nimport Loading from \"./Loading\";\r\nimport $ from \"jquery\";\r\n\r\nexport default {\r\n  name: \"Chatbot\",\r\n  props: [\"firstname\", \"lastname\"],\r\n  components: { Loading },\r\n  data: () => ({\r\n    agentId: \"\",\r\n    guestId: \"\",\r\n    file: \"\",\r\n    flag: false,\r\n    message: \"\",\r\n    icons: {\r\n      iconfont: \"md\"\r\n    },\r\n    imageUrl: \"\",\r\n    image: \"\",\r\n    txt: \"\",\r\n    skill: \"\",\r\n    isConnecting: false,\r\n    start: false,\r\n    selectedFile: \"\",\r\n    messages: [\r\n      {\r\n        text:\r\n          \"Type #support for help or type #availability to see the number of agents currently available.\",\r\n        author: \"Bank\",\r\n        time: moment().format(\"h:mm a\"),\r\n        image: \"\"\r\n      }\r\n    ],\r\n    conversation: \"\"\r\n  }),\r\n  created() {\r\n    console.log(this.$route.params);\r\n    this.gettingConnection();\r\n  },\r\n  methods: {\r\n    //changed all the this to self including this.conversation\r\n    gettingConnection: async function() {\r\n      let self = this;\r\n      try {\r\n        let response = await axios.get(\r\n          `https://limitless-sierra-11102.herokuapp.com/create_guest?firstName=${this.$route.params.firstname}&lastName=${this.$route.params.lastname}`\r\n        );\r\n        self.guestId = response.data.id;\r\n        self.email = response.data.loginEmail;\r\n        self.password = response.data.password;\r\n        console.log(\"this is guest id:\" + this.guestId);\r\n        console.log(this.email);\r\n        console.log(this.password);\r\n        if (this.guestId) {\r\n          this.gettingConvo();\r\n        } else {\r\n          console.log(\"can't find id\");\r\n        }\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    },\r\n    gettingConvo: async function() {\r\n      let self = this;\r\n      try {\r\n        await rainbowSDK.connection.signin(this.email, this.password);\r\n        console.log(\"signed in\");\r\n        //bot contact\r\n        let contact = await rainbowSDK.contacts.searchById(\r\n          \"5e3298a2e9f12730636949d2\"\r\n        );\r\n        console.log(contact);\r\n        //open conversation for bot\r\n        self.conversation = await rainbowSDK.conversations.openConversationForContact(\r\n          contact\r\n        );\r\n        console.log(self.conversation);\r\n        console.log(self.conversation.messages);\r\n        //detecting messages from bot\r\n        await rainbowSDK.im.getMessagesFromConversation(self.conversation);\r\n        document.addEventListener(\r\n          rainbowSDK.im.RAINBOW_ONNEWIMMESSAGERECEIVED,\r\n          self.receive\r\n        );\r\n        self.start = true;\r\n        document.addEventListener(\r\n          rainbowSDK.im.RAINBOW_ONNEWIMRECEIPTRECEIVED,\r\n          self.receipt\r\n        );\r\n        console.log(this.guestId);\r\n        //get token id from agent backend\r\n        while (this.flag == false) {\r\n          try {\r\n            let response = await axios.get(\r\n              `https://limitless-sierra-11102.herokuapp.com/establish_connection?id=${this.guestId}`\r\n            );\r\n            if (response.data.connection == true) {\r\n              this.flag = true;\r\n              this.agentComeIn();\r\n            }\r\n          } catch (err) {\r\n            console.log(err);\r\n          }\r\n        }\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    },\r\n    endChat: async function() {\r\n      let self = this;\r\n      this.$store.state.agentId = \"\";\r\n      console.log(this.$store.state.agentId);\r\n      await rainbowSDK.conversations.closeConversation(self.conversation);\r\n      console.log(\"closing\");\r\n    },\r\n    agentComeIn: async function() {\r\n      let self = this;\r\n      // document.removeEventListener(\r\n      //   rainbowSDK.im.RAINBOW_ONNEWIMRECEIPTRECEIVED,\r\n      //   self.receipt\r\n      // );\r\n      let response = await axios.get(\r\n        `https://limitless-sierra-11102.herokuapp.com/establish_connection?id=${this.guestId}`\r\n      );\r\n      console.log(response);\r\n      console.log(response.data.agentId);\r\n      console.log(response.data.connection);\r\n      console.log(response.data.skill);\r\n      this.$store.state.agentId = response.data.agentId;\r\n      console.log(this.$store.state.agentId);\r\n      this.skill = response.data.skill;\r\n      console.log(response);\r\n      self.agentId = response.data.agentId;\r\n      console.log(self.agentId);\r\n      let contact = await rainbowSDK.contacts.searchById(self.agentId);\r\n      console.log(contact);\r\n      self.conversation = await rainbowSDK.conversations.openConversationForContact(\r\n        contact\r\n      );\r\n      console.log(self.conversation);\r\n      console.log(self.conversation.messages);\r\n      await rainbowSDK.im.sendMessageToConversation(\r\n        this.conversation,\r\n        `Hello, I am ${this.$route.params.firstname} and I need help in ${this.skill} `\r\n      );\r\n      document.removeEventListener(\r\n        rainbowSDK.im.RAINBOW_ONNEWIMMESSAGERECEIVED,\r\n        self.receive\r\n      );\r\n      await rainbowSDK.im.getMessagesFromConversation(this.conversation);\r\n      document.addEventListener(\r\n        rainbowSDK.im.RAINBOW_ONNEWIMMESSAGERECEIVED,\r\n        self.receive1\r\n      );\r\n      document.addEventListener(\r\n        rainbowSDK.im.RAINBOW_ONNEWIMRECEIPTRECEIVED,\r\n        self.receipt\r\n      );\r\n    },\r\n    alert() {\r\n      this.$confirm(\r\n        \"Please only click this button once you have been connected to an agent. Do you want to call the agent instead to assist you?\"\r\n      ).then(() => {\r\n        //do something...\r\n        this.callingAgent();\r\n      });\r\n    },\r\n    callingAgent: async function() {\r\n      console.log(this.$store.state.agentId);\r\n      this.$router.push({\r\n        name: \"call\"\r\n      });\r\n    },\r\n    //allows user to send message onto chatbot\r\n    sendMessage() {\r\n      let self = this;\r\n      if (self.txt != \"\") {\r\n        let message = self.txt;\r\n        rainbowSDK.im.sendMessageToConversation(self.conversation, message);\r\n        self.messages.push({\r\n          text: message,\r\n          author: \"client\",\r\n          time: moment().format(\"h:mm a\")\r\n        });\r\n        $(\"html, body\").animate({ scrollTop: $(document).height() }, \"slow\");\r\n        self.txt = \"\";\r\n      }\r\n    },\r\n    //when message received\r\n    receive: function(event) {\r\n      let self = this;\r\n      rainbowSDK.im.markMessageFromConversationAsRead(\r\n        event.detail.conversation,\r\n        event.detail.message\r\n      );\r\n      console.log(event.detail.message.data);\r\n      console.log(event.detail.message.side);\r\n      self.messages.push({\r\n        text: event.detail.message.data,\r\n        author: \"Bank\",\r\n        time: moment().format(\"h:mm a\")\r\n      });\r\n      $(\"html, body\").animate({ scrollTop: $(document).height() }, \"slow\");\r\n    },\r\n    receive1: function(event) {\r\n      let self = this;\r\n      console.log(event.detail.message.data);\r\n      console.log(event.detail.message.side);\r\n      self.messages.push({\r\n        text: event.detail.message.data,\r\n        author: \"Agent\",\r\n        time: moment().format(\"h:mm a\")\r\n      });\r\n      $(\"html, body\").animate({ scrollTop: $(document).height() }, \"slow\");\r\n    },\r\n    //when you send out message\r\n    receipt: function(event) {\r\n      console.log(\"receipt\");\r\n      console.log(event.detail.message.data);\r\n      console.log(event.detail.message.side);\r\n    }\r\n  },\r\n  mounted() {\r\n    const self = this;\r\n    window.addEventListener(\"keyup\", function(event) {\r\n      if (event.keyCode == 13) {\r\n        self.sendMessage();\r\n      }\r\n    });\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped lang=\"scss\">\r\n.chat-box-list {\r\n  display: flex;\r\n  flex-direction: column;\r\n  list-style-type: none;\r\n  padding-bottom: 90px;\r\n}\r\n.chat-box-list-container {\r\n  overflow-y: scroll;\r\n  scrollbar-width: auto;\r\n  margin-bottom: 1px;\r\n  overflow-x: hidden;\r\n}\r\n.chat-box-list {\r\n  padding-left: 10px;\r\n  padding-right: 10px;\r\n  span {\r\n    padding: 8px;\r\n    color: white;\r\n    border-radius: 4px;\r\n  }\r\n  .Bank {\r\n    span {\r\n      background: #937cca;\r\n      padding: 16px;\r\n      display: grid;\r\n    }\r\n    p {\r\n      float: right;\r\n    }\r\n  }\r\n  .client {\r\n    span {\r\n      background: #48d382;\r\n      padding: 16px;\r\n      display: grid;\r\n    }\r\n    // p {\r\n    //   float: left;\r\n    // }\r\n  }\r\n  .Agent {\r\n    span {\r\n      background: salmon;\r\n      padding: 16px;\r\n      display: grid;\r\n    }\r\n    // p {\r\n    //   float: left;\r\n    // }\r\n  }\r\n}\r\n.Bank {\r\n  margin-right: auto !important;\r\n}\r\n.client {\r\n  margin-left: auto !important;\r\n}\r\n.Agent {\r\n  margin-right: auto !important;\r\n}\r\n.header {\r\n  background: rgb(2, 106, 167);\r\n  color: #fff;\r\n  text-align: center;\r\n  padding: 20px;\r\n}\r\n.footer {\r\n  position: fixed;\r\n  bottom: 0;\r\n  width: 100%;\r\n  height: 50px;\r\n  text-align: center;\r\n  background-color: #ccc;\r\n}\r\n.icon {\r\n  margin-right: 6000px;\r\n  font-size: 80px;\r\n  height: 20px;\r\n  vertical-align: middle;\r\n  padding: 40px 45px 40px 35px;\r\n  line-height: 5px !important;\r\n  top: 30px;\r\n  position: relative;\r\n}\r\n.icon2 {\r\n  margin-left: 1500px;\r\n  font-size: 80px;\r\n  height: 20px;\r\n  vertical-align: middle;\r\n  padding: 40px 45px 40px 35px;\r\n  line-height: 5px !important;\r\n  top: 30px;\r\n  position: relative;\r\n}\r\n#popup {\r\n  position: absolute;\r\n  width: 300px;\r\n  height: 700px;\r\n  z-index: 15;\r\n  top: 50%;\r\n}\r\n.submit {\r\n  position: fixed;\r\n  bottom: 20px;\r\n  width: 70px;\r\n  height: 20px; /*height: auto;*/\r\n  margin-left: 750px;\r\n  border: 0px solid #d6d6d6;\r\n  z-index: 99;\r\n  padding: 0;\r\n  size: 500px;\r\n  text-align: center;\r\n}\r\n.rating-text {\r\n  font-weight: bold;\r\n  font-size: 1.9em;\r\n  border: 1px solid #cfcfcf;\r\n  padding-left: 10px;\r\n  padding-right: 10px;\r\n  border-radius: 5px;\r\n  color: #999;\r\n}\r\n.stars {\r\n  margin-bottom: 90px;\r\n  margin-top: 50px;\r\n}\r\nrouter-link {\r\n  text-decoration: none;\r\n}\r\n</style>\r\n"]}]}