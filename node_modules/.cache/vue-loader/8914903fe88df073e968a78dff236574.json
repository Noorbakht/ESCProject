{"remainingRequest":"C:\\Users\\noorb\\OneDrive\\Desktop\\StarterKit-SDKWeb-VueJS-master\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\noorb\\OneDrive\\Desktop\\StarterKit-SDKWeb-VueJS-master\\src\\views\\ChatBot.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\noorb\\OneDrive\\Desktop\\StarterKit-SDKWeb-VueJS-master\\src\\views\\ChatBot.vue","mtime":1584960509620},{"path":"C:\\Users\\noorb\\OneDrive\\Desktop\\StarterKit-SDKWeb-VueJS-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\noorb\\OneDrive\\Desktop\\StarterKit-SDKWeb-VueJS-master\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\noorb\\OneDrive\\Desktop\\StarterKit-SDKWeb-VueJS-master\\node_modules\\vuetify-loader\\lib\\loader.js","mtime":1574476662000},{"path":"C:\\Users\\noorb\\OneDrive\\Desktop\\StarterKit-SDKWeb-VueJS-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\noorb\\OneDrive\\Desktop\\StarterKit-SDKWeb-VueJS-master\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KDQppbXBvcnQgcmFpbmJvd1NESyBmcm9tICJyYWluYm93LXdlYi1zZGsiOw0KaW1wb3J0IG1vbWVudCBmcm9tICJtb21lbnQiOw0KLy8gaW1wb3J0IHsgd3JpdGVGaWxlIH0gZnJvbSAiZnMtd2ViIjsNCi8vIGNvbnN0IGZzID0gcmVxdWlyZSgiZnMiKTsNCi8vIHZhciBmcyA9IHJlcXVpcmUoImJyb3dzZXJpZnktZnMiKTsNCi8vIGltcG9ydCBheGlvcyBmcm9tICJheGlvcyI7DQoNCmV4cG9ydCBkZWZhdWx0IHsNCiAgbmFtZTogIkNoYXRib3QiLA0KICBwcm9wczogWyJmaXJzdG5hbWUiLCAibGFzdG5hbWUiXSwNCiAgY29tcG9uZW50czoge30sDQogIGRhdGE6ICgpID0+ICh7DQogICAgbWVzc2FnZTogIiIsDQogICAgbWVzc2FnZXM6IFsNCiAgICAgIHsNCiAgICAgICAgdGV4dDogIkFnZW50IGlzIGF2YWlsYWJsZS4gVHlwZSAjc3VwcG9ydCBmb3IgaGVscC4iLA0KICAgICAgICBhdXRob3I6ICJBZ2VudCIsDQogICAgICAgIHRpbWU6IG1vbWVudCgpLmZvcm1hdCgiaDptbSBhIikNCiAgICAgIH0NCiAgICBdDQogIH0pLA0KICBjcmVhdGVkKCkgew0KICAgIC8vIGNvbnNvbGUubG9nKHRoaXMuJHJvdXRlLnBhcmFtcyk7DQogICAgLy8gdmFyIGRpY3QgPSB0aGlzLiRyb3V0ZS5wYXJhbXM7DQogICAgLy8gdmFyIGRpY3RzdHJpbmcgPSBKU09OLnN0cmluZ2lmeShkaWN0KTsNCiAgICAvLyBjb25zdCBwYXRoID0gcmVxdWlyZSgicGF0aCIpOw0KICAgIC8vIGNvbnN0IGZpbGVQYXRoID0gcGF0aC5qb2luKF9fZGlybmFtZSwgIi4vdGhpbmcuanNvbiIpOw0KICAgIC8vIGNvbnNvbGUubG9nKGZpbGVQYXRoKTsNCiAgICAvLyB3cml0ZUZpbGUoZmlsZVBhdGgsIGRpY3RzdHJpbmcpDQogICAgLy8gICAudGhlbihmdW5jdGlvbigpIHsNCiAgICAvLyAgICAgY29uc29sZS5sb2coIkZpbGUgc2F2ZWQiKTsNCiAgICAvLyAgIH0pDQogICAgLy8gICAuY2F0Y2goZXJyID0+IHsNCiAgICAvLyAgICAgY29uc29sZS5sb2coIkVycm9yIHdpdGggZmlsZSIsIGVycik7DQogICAgLy8gICB9KTsNCiAgICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKA0KICAgICAgcmFpbmJvd1NESy5SQUlOQk9XX09OU0lHTkVELA0KICAgICAgdGhpcy5nZXR0aW5nQ29ubmVjdGlvbg0KICAgICk7DQogICAgdGhpcy5nZXR0aW5nQ29ubmVjdGlvbigpOw0KICAgIHJhaW5ib3dTREsuc3RhcnQoKTsNCiAgICByYWluYm93U0RLLmxvYWQoKTsNCiAgfSwNCiAgbWV0aG9kczogew0KICAgIGdldHRpbmdDb25uZWN0aW9uOiBhc3luYyBmdW5jdGlvbigpIHsNCiAgICAgIC8vIGdldCB0b2tlbiBpZCBmcm9tIGJhY2tlbmQgdGhlbiBzaWduaW4NCiAgICAgIC8vIHZhciB0b2tlbiA9IC4uLg0KICAgICAgLy8gbGV0IGFjY291bnQgPSBhd2FpdCByYWluYm93U0RLLmNvbm5lY3Rpb24uc2lnbmluU2FuZEJveFdpdGhUb2tlbih0aGlzLnRva2VuKTsNCiAgICAgIC8vIHVzZXIgaXMgdGhpcyB0b2tlbg0KICAgICAgLy8gZ2V0IGlkIG9mIGJvdA0KICAgICAgLy8gZ2V0TWVzc2FmZUZyb21Db252ZXJzYXRpb25CeUlkKCJTdHJpbmcgSUQgKHJlcGxhY2UgdyBBZ2VudCBJRCIpDQogICAgICB2YXIgZW1haWwgPSAiYWdlbnQxQHN1dGQuZWR1LnNnIjsNCiAgICAgIHZhciBwYXNzd29yZCA9ICJQQHNzd29yZDEyMyI7DQogICAgICBsZXQgYWNjb3VudCA9IGF3YWl0IHJhaW5ib3dTREsuY29ubmVjdGlvbg0KICAgICAgICAuc2lnbmluKGVtYWlsLCBwYXNzd29yZCkNCiAgICAgICAgLnRoZW4oKCkgPT4gew0KICAgICAgICAgIGNvbnNvbGUubG9nKCJzaWduZWQgaW4iKTsNCiAgICAgICAgfSkNCiAgICAgICAgLmNhdGNoKGVyciA9PiB7DQogICAgICAgICAgY29uc29sZS5sb2coImZhaWxlZCBpbiBzaWduaW5nIGluIiwgZXJyKTsNCiAgICAgICAgfSk7DQogICAgICBjb25zb2xlLmxvZygiaGVyZSIpOw0KICAgICAgLy8gaWYgKGFjY291bnQpIHsNCiAgICAgIC8vICAgbGV0IGNvbnRhY3QgPSBhd2FpdCByYWluYm93U0RLLmNvbnRhY3RzLnNlYXJjaEJ5SWQodGhpcy5hZ2VudElkKTsgLy9nZXQgY29udGFjdCBmcm9tIGFnZW50IGlkDQogICAgICAvLyAgIHRoaXMuY29udmVyc2F0aW9uID0gYXdhaXQgcmFpbmJvd1NESy5jb252ZXJzYXRpb25zLm9wZW5Db252ZXJzYXRpb25Gb3JDb250YWN0KA0KICAgICAgLy8gICAgIGNvbnRhY3QNCiAgICAgIC8vICAgKTsNCiAgICAgIC8vICAgYXdhaXQgcmFpbmJvd1NESy5pbS5nZXRNZXNzYWdlc0Zyb21Db252ZXJzYXRpb24odGhpcy5jb252ZXJzYXRpb24pOyAvL2dldHRpbmcgYWxsIG1lc3NhZ2VzIGZyb20gY29udmVyc2F0aW9uDQogICAgICAvLyAgIHRoaXMuc3RhcnQgPSBmYWxzZTsNCiAgICAgIC8vICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcigNCiAgICAgIC8vICAgICByYWluYm93U0RLLmltLlJBSU5CT1dfT05ORVdJTU1FU1NBR0VSRUNFSVZFRCwNCiAgICAgIC8vICAgICB0aGlzLnJlY2VpdmUNCiAgICAgIC8vICAgKTsNCiAgICAgIC8vICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcigNCiAgICAgIC8vICAgICByYWluYm93U0RLLmltLlJBSU5CT1dfT05ORVdJTVJFQ0VJUFRSRUNFSVZFRCwNCiAgICAgIC8vICAgICB0aGlzLnJlY2VpcHQNCiAgICAgIC8vICAgKTsNCiAgICAgIC8vIH0gZWxzZSB7DQogICAgICAvLyAgIGNvbnNvbGUubG9nKCJObyBhY2NvdW50IGZvdW5kISIpOw0KICAgICAgLy8gfQ0KICAgIH0sDQogICAgc2VuZE1lc3NhZ2U6IGZ1bmN0aW9uKCkgew0KICAgICAgLy8gY29uc29sZS5sb2coInNlbnQiKTsNCiAgICAgIGNvbnN0IG1lc3NhZ2UgPSB0aGlzLm1lc3NhZ2U7DQogICAgICB0aGlzLm1lc3NhZ2VzLnB1c2goew0KICAgICAgICB0ZXh0OiBtZXNzYWdlLA0KICAgICAgICBhdXRob3I6ICJjbGllbnQiLA0KICAgICAgICB0aW1lOiBtb21lbnQoKS5mb3JtYXQoImg6bW0gYSIpDQogICAgICB9KTsNCiAgICAgIHRoaXMubWVzc2FnZSA9ICIiOw0KICAgICAgdGhpcy4kbmV4dFRpY2soKCkgPT4gew0KICAgICAgICB0aGlzLiRyZWZzLmNoYXRib3guc2Nyb2xsVG9wID0gdGhpcy4kcmVmcy5jaGF0Ym94LnNjcm9sbEhlaWdodDsNCiAgICAgIH0pOw0KICAgIH0NCiAgfQ0KfTsNCg=="},{"version":3,"sources":["ChatBot.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0CA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ChatBot.vue","sourceRoot":"src/views","sourcesContent":["<template>\r\n  <div class=\"chat\">\r\n    <header class=\"header\">\r\n      <h3>Start Chatting</h3>\r\n    </header>\r\n    <div class=\"chatBox\" id=\"chatBox\" ref=\"chatBox\">\r\n      <v-card flat class=\"chat-box-list-container\" ref=\"chatbox\" fluid>\r\n        <ul class=\"chat-box-list\" style=\"word-break: break-all\">\r\n          <li\r\n            v-for=\"message in messages\"\r\n            :key=\"message.messages\"\r\n            v-bind:class=\"message.author\"\r\n          >\r\n            <p>\r\n              <v-container>\r\n                <span>{{ message.text }}</span>\r\n              </v-container>\r\n            </p>\r\n            <v-card-subtitle class=\"white--text text-right pr-2 pb-1\">\r\n              {{ message.author }}\r\n              {{ message.time }}\r\n            </v-card-subtitle>\r\n          </li>\r\n        </ul>\r\n      </v-card>\r\n    </div>\r\n    <v-footer id=\"footer\" fixed width=\"100%\">\r\n      <v-textarea\r\n        auto-grow\r\n        rows=\"2\"\r\n        placeholder=\"Start typing...\"\r\n        filled\r\n        type=\"text\"\r\n        v-model=\"message\"\r\n        @keyup.enter=\"sendMessage\"\r\n      />\r\n      <v-btn right height=\"60px\" @click=\"sendMessage\">Send</v-btn>\r\n    </v-footer>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport rainbowSDK from \"rainbow-web-sdk\";\r\nimport moment from \"moment\";\r\n// import { writeFile } from \"fs-web\";\r\n// const fs = require(\"fs\");\r\n// var fs = require(\"browserify-fs\");\r\n// import axios from \"axios\";\r\n\r\nexport default {\r\n  name: \"Chatbot\",\r\n  props: [\"firstname\", \"lastname\"],\r\n  components: {},\r\n  data: () => ({\r\n    message: \"\",\r\n    messages: [\r\n      {\r\n        text: \"Agent is available. Type #support for help.\",\r\n        author: \"Agent\",\r\n        time: moment().format(\"h:mm a\")\r\n      }\r\n    ]\r\n  }),\r\n  created() {\r\n    // console.log(this.$route.params);\r\n    // var dict = this.$route.params;\r\n    // var dictstring = JSON.stringify(dict);\r\n    // const path = require(\"path\");\r\n    // const filePath = path.join(__dirname, \"./thing.json\");\r\n    // console.log(filePath);\r\n    // writeFile(filePath, dictstring)\r\n    //   .then(function() {\r\n    //     console.log(\"File saved\");\r\n    //   })\r\n    //   .catch(err => {\r\n    //     console.log(\"Error with file\", err);\r\n    //   });\r\n    document.addEventListener(\r\n      rainbowSDK.RAINBOW_ONSIGNED,\r\n      this.gettingConnection\r\n    );\r\n    this.gettingConnection();\r\n    rainbowSDK.start();\r\n    rainbowSDK.load();\r\n  },\r\n  methods: {\r\n    gettingConnection: async function() {\r\n      // get token id from backend then signin\r\n      // var token = ...\r\n      // let account = await rainbowSDK.connection.signinSandBoxWithToken(this.token);\r\n      // user is this token\r\n      // get id of bot\r\n      // getMessafeFromConversationById(\"String ID (replace w Agent ID\")\r\n      var email = \"agent1@sutd.edu.sg\";\r\n      var password = \"P@ssword123\";\r\n      let account = await rainbowSDK.connection\r\n        .signin(email, password)\r\n        .then(() => {\r\n          console.log(\"signed in\");\r\n        })\r\n        .catch(err => {\r\n          console.log(\"failed in signing in\", err);\r\n        });\r\n      console.log(\"here\");\r\n      // if (account) {\r\n      //   let contact = await rainbowSDK.contacts.searchById(this.agentId); //get contact from agent id\r\n      //   this.conversation = await rainbowSDK.conversations.openConversationForContact(\r\n      //     contact\r\n      //   );\r\n      //   await rainbowSDK.im.getMessagesFromConversation(this.conversation); //getting all messages from conversation\r\n      //   this.start = false;\r\n      //   document.addEventListener(\r\n      //     rainbowSDK.im.RAINBOW_ONNEWIMMESSAGERECEIVED,\r\n      //     this.receive\r\n      //   );\r\n      //   document.addEventListener(\r\n      //     rainbowSDK.im.RAINBOW_ONNEWIMRECEIPTRECEIVED,\r\n      //     this.receipt\r\n      //   );\r\n      // } else {\r\n      //   console.log(\"No account found!\");\r\n      // }\r\n    },\r\n    sendMessage: function() {\r\n      // console.log(\"sent\");\r\n      const message = this.message;\r\n      this.messages.push({\r\n        text: message,\r\n        author: \"client\",\r\n        time: moment().format(\"h:mm a\")\r\n      });\r\n      this.message = \"\";\r\n      this.$nextTick(() => {\r\n        this.$refs.chatbox.scrollTop = this.$refs.chatbox.scrollHeight;\r\n      });\r\n    }\r\n  }\r\n};\r\n</script>\r\n<style scoped lang=\"scss\">\r\n.chat-box-list {\r\n  display: flex;\r\n  flex-direction: column;\r\n  list-style-type: none;\r\n}\r\n.chat-box-list-container {\r\n  overflow-y: scroll;\r\n  margin-bottom: 1px;\r\n  overflow-x: hidden;\r\n}\r\n.chat-box-list {\r\n  padding-left: 10px;\r\n  padding-right: 10px;\r\n  span {\r\n    padding: 8px;\r\n    color: white;\r\n    border-radius: 4px;\r\n  }\r\n  .Agent {\r\n    span {\r\n      background: #99cc00;\r\n      padding: 16px;\r\n      display: grid;\r\n    }\r\n    p {\r\n      float: right;\r\n    }\r\n  }\r\n  .client {\r\n    span {\r\n      background: #0070c8;\r\n      padding: 16px;\r\n      display: grid;\r\n    }\r\n    // p {\r\n    //   float: left;\r\n    // }\r\n  }\r\n}\r\n.Agent {\r\n  margin-right: auto !important;\r\n}\r\n.client {\r\n  margin-left: auto !important;\r\n}\r\n.header {\r\n  background: #6e27be;\r\n  color: #fff;\r\n  text-align: center;\r\n  padding: 40px;\r\n}\r\n</style>\r\n"]}]}