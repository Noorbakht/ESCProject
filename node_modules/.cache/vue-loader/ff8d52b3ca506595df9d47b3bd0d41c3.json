{"remainingRequest":"C:\\Users\\noorb\\OneDrive\\Desktop\\StarterKit-SDKWeb-VueJS-master\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\noorb\\OneDrive\\Desktop\\StarterKit-SDKWeb-VueJS-master\\src\\views\\ChatBot.vue?vue&type=style&index=0&id=078caa85&scoped=true&lang=scss&","dependencies":[{"path":"C:\\Users\\noorb\\OneDrive\\Desktop\\StarterKit-SDKWeb-VueJS-master\\src\\views\\ChatBot.vue","mtime":1585744920723},{"path":"C:\\Users\\noorb\\OneDrive\\Desktop\\StarterKit-SDKWeb-VueJS-master\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\noorb\\OneDrive\\Desktop\\StarterKit-SDKWeb-VueJS-master\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\noorb\\OneDrive\\Desktop\\StarterKit-SDKWeb-VueJS-master\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\noorb\\OneDrive\\Desktop\\StarterKit-SDKWeb-VueJS-master\\node_modules\\sass-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\noorb\\OneDrive\\Desktop\\StarterKit-SDKWeb-VueJS-master\\node_modules\\vuetify-loader\\lib\\loader.js","mtime":1574476662000},{"path":"C:\\Users\\noorb\\OneDrive\\Desktop\\StarterKit-SDKWeb-VueJS-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\noorb\\OneDrive\\Desktop\\StarterKit-SDKWeb-VueJS-master\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCg0KLmNoYXQtYm94LWxpc3Qgew0KICBkaXNwbGF5OiBmbGV4Ow0KICBmbGV4LWRpcmVjdGlvbjogY29sdW1uOw0KICBsaXN0LXN0eWxlLXR5cGU6IG5vbmU7DQogIHBhZGRpbmctYm90dG9tOiA5MHB4Ow0KfQ0KLmNoYXQtYm94LWxpc3QtY29udGFpbmVyIHsNCiAgb3ZlcmZsb3cteTogc2Nyb2xsOw0KICBtYXJnaW4tYm90dG9tOiAxcHg7DQogIG92ZXJmbG93LXg6IGhpZGRlbjsNCn0NCi5jaGF0LWJveC1saXN0IHsNCiAgcGFkZGluZy1sZWZ0OiAxMHB4Ow0KICBwYWRkaW5nLXJpZ2h0OiAxMHB4Ow0KICBzcGFuIHsNCiAgICBwYWRkaW5nOiA4cHg7DQogICAgY29sb3I6IHdoaXRlOw0KICAgIGJvcmRlci1yYWRpdXM6IDRweDsNCiAgfQ0KICAuQWdlbnQgew0KICAgIHNwYW4gew0KICAgICAgYmFja2dyb3VuZDogIzk5Y2MwMDsNCiAgICAgIHBhZGRpbmc6IDE2cHg7DQogICAgICBkaXNwbGF5OiBncmlkOw0KICAgIH0NCiAgICBwIHsNCiAgICAgIGZsb2F0OiByaWdodDsNCiAgICB9DQogIH0NCiAgLmNsaWVudCB7DQogICAgc3BhbiB7DQogICAgICBiYWNrZ3JvdW5kOiAjMDA3MGM4Ow0KICAgICAgcGFkZGluZzogMTZweDsNCiAgICAgIGRpc3BsYXk6IGdyaWQ7DQogICAgfQ0KICAgIC8vIHAgew0KICAgIC8vICAgZmxvYXQ6IGxlZnQ7DQogICAgLy8gfQ0KICB9DQp9DQouQWdlbnQgew0KICBtYXJnaW4tcmlnaHQ6IGF1dG8gIWltcG9ydGFudDsNCn0NCi5jbGllbnQgew0KICBtYXJnaW4tbGVmdDogYXV0byAhaW1wb3J0YW50Ow0KfQ0KLmhlYWRlciB7DQogIGJhY2tncm91bmQ6ICM2ZTI3YmU7DQogIGNvbG9yOiAjZmZmOw0KICB0ZXh0LWFsaWduOiBjZW50ZXI7DQogIHBhZGRpbmc6IDQwcHg7DQp9DQouZm9vdGVyIHsNCiAgcG9zaXRpb246IGZpeGVkOw0KICBib3R0b206IDA7DQogIHdpZHRoOiAxMDAlOw0KICBoZWlnaHQ6IDUwcHg7DQogIHRleHQtYWxpZ246IGNlbnRlcjsNCiAgYmFja2dyb3VuZC1jb2xvcjogI2NjYzsNCn0NCg=="},{"version":3,"sources":["ChatBot.vue"],"names":[],"mappingsfile":"ChatBot.vue","sourceRoot":"src/views","sourcesContent":["<template>\r\n  <div class=\"chat\">\r\n    <header class=\"header\">\r\n      <h3>Start Chatting</h3>\r\n    </header>\r\n    <!-- <v-navigation-drawer id=\"drawer\" v-model=\"drawer\">\r\n      <p>Hello, Guest</p>\r\n      <v-list>\r\n        <v-list-item name=\"toHomebutton\" :to=\"{ name: 'Home' }\">Logout</v-list-item>\r\n    </v-list>\r\n    </v-navigation-drawer>-->\r\n    <div class=\"chatBox\" id=\"chatBox\" ref=\"chatBox\">\r\n      <v-card flat class=\"chat-box-list-container\" ref=\"chatbox\" fluid>\r\n        <ul class=\"chat-box-list\" style=\"word-break: keep-all\">\r\n          <li\r\n            v-for=\"message in messages\"\r\n            :key=\"message.text\"\r\n            v-bind:class=\"message.author\"\r\n          >\r\n            <p>\r\n              <v-container>\r\n                <span>{{ message.text }}</span>\r\n              </v-container>\r\n            </p>\r\n            <v-card-subtitle class=\"white--text text-right pr-2 pb-1\">\r\n              {{ message.author }}\r\n              {{ message.time }}\r\n            </v-card-subtitle>\r\n          </li>\r\n        </ul>\r\n      </v-card>\r\n    </div>\r\n    <v-footer id=\"footer\" fixed width=\"100%\">\r\n      <v-textarea\r\n        auto-grow\r\n        name=\"msgbox\"\r\n        rows=\"2\"\r\n        placeholder=\"Start typing...\"\r\n        filled\r\n        type=\"text\"\r\n        v-model=\"txt\"\r\n      />\r\n      <i class=\"fas fa-paperclip\"></i>\r\n      <v-btn right height=\"60px\" @click=\"sendMessage\">Send</v-btn>\r\n    </v-footer>\r\n    <v-btn raised class=\"primary\" @click=\"onPickFile\">Upload Image</v-btn>\r\n    <input\r\n      type=\"file\"\r\n      style=\"display: none\"\r\n      ref=\"fileInput\"\r\n      accept=\"image/*\"\r\n      @change=\"onFilePicked\"\r\n    />\r\n    <v-flex xs12 sm6 offset-sm3>\r\n      <img :src=\"imageUrl\" height=\"150\" />\r\n    </v-flex>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport rainbowSDK from \"rainbow-web-sdk\";\r\nimport moment from \"moment\";\r\nimport axios from \"axios\";\r\n// import $ from \"jquery\";\r\n\r\nexport default {\r\n  name: \"Chatbot\",\r\n  props: [\"firstname\", \"lastname\"],\r\n  components: {},\r\n  data: () => ({\r\n    agentId: \"\",\r\n    imageUrl: \"\",\r\n    imgae: null,\r\n    txt: \"\",\r\n    selectedFile: null,\r\n    messages: [\r\n      {\r\n        text: \"Type #support for help.\",\r\n        author: \"Agent\",\r\n        time: moment().format(\"h:mm a\")\r\n      }\r\n    ],\r\n    conversation: \"\"\r\n  }),\r\n  created() {\r\n    // eslint-disable-next-line no-unused-vars\r\n    // const functions = require(\"firebase-functions\");\r\n\r\n    // The Firebase Admin SDK to access the Firebase Realtime Database.\r\n    // const admin = require(\"firebase-admin\");\r\n    // admin.initializeApp();\r\n    console.log(this.$route.params);\r\n  },\r\n  methods: {\r\n    gettingConnection: async function() {\r\n      // console.log(this.$route.params.firstname);\r\n      let self = this;\r\n      try {\r\n        let response = await axios.get(\r\n          `https://limitless-sierra-11102.herokuapp.com/create_guest?firstName=${this.$route.params.firstname}&lastName=${this.$route.params.lastname}`\r\n        );\r\n        self.guestId = response.data.id;\r\n        self.email = \"agent1@sutd.edu.sg\";\r\n        self.password = \"P@ssword123\";\r\n        console.log(this.guestId);\r\n        console.log(this.email);\r\n        console.log(this.password);\r\n        if (this.guestId) {\r\n          this.gettingConvo();\r\n        } else {\r\n          console.log(\"can't find id\");\r\n        }\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    },\r\n    gettingConvo: async function() {\r\n      try {\r\n        await rainbowSDK.connection.signin(this.email, this.password);\r\n        //bot contact\r\n        let contact = await rainbowSDK.contacts.searchById(\r\n          \"5e3298a2e9f12730636949d2\"\r\n        );\r\n        console.log(contact);\r\n        //open conversation for bot\r\n        this.conversation = await rainbowSDK.conversations.openConversationForContact(\r\n          contact\r\n        );\r\n        console.log(this.conversation);\r\n        console.log(this.conversation.messages);\r\n        //detting messages from bot\r\n        // await rainbowSDK.im.getMessagesFromConversation(this.conversation);\r\n        // document.addEventListener(\r\n        //   rainbowSDK.im.RAINBOW_ONNEWIMMESSAGERECEIVED,\r\n        //   this.receive\r\n        // );\r\n\r\n        document.addEventListener(\r\n          rainbowSDK.im.RAINBOW_ONNEWIMRECEIPTRECEIVED,\r\n          this.receipt\r\n        );\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    },\r\n    sendMessage() {\r\n      // console.log(\"sent\");\r\n      if (this.txt != \"\") {\r\n        let message = this.txt;\r\n        rainbowSDK.im.sendMessageToConversation(this.conversation, message);\r\n        this.messages.push({\r\n          text: message,\r\n          author: \"client\",\r\n          time: moment().format(\"h:mm a\")\r\n        });\r\n        this.$nextTick(() => {\r\n          this.$refs.chatbox.scrollTop = this.$refs.chatbox.scrollHeight;\r\n        });\r\n        this.txt = \"\";\r\n      }\r\n    },\r\n    //when message received\r\n    receive: function(event) {\r\n      console.log(event.detail.message.data);\r\n      console.log(event.detail.message.side);\r\n      this.messages.push({\r\n        text: event.detail.message.data,\r\n        author: \"Agent\",\r\n        time: moment().format(\"h:mm a\")\r\n      });\r\n    },\r\n    //when you send out message\r\n    receipt: function(event) {\r\n      console.log(\"receipt\");\r\n      console.log(event.detail.message.data);\r\n      console.log(event.detail.message.side);\r\n    },\r\n    onPickFile() {\r\n      this.$refs.fileInput.click();\r\n    },\r\n    onFilePicked(event) {\r\n      const files = event.target.files;\r\n      let filename = files[0].name;\r\n      if (filename.lastIndexOf(\".\") <= 0) {\r\n        return alert(\"Please find a valid file input\");\r\n      }\r\n      const fileReader = new FileReader();\r\n      fileReader.addEventListener(\"load\", () => {\r\n        this.imageUrl = fileReader.result;\r\n      });\r\n      fileReader.readAsDataURL(files[0]);\r\n      this.image = files[0];\r\n    }\r\n  },\r\n  mounted() {\r\n    const self = this;\r\n    window.addEventListener(\"keyup\", function(event) {\r\n      if (event.keyCode == 13) {\r\n        self.sendMessage();\r\n      }\r\n    });\r\n    this.gettingConnection();\r\n  }\r\n};\r\n</script>\r\n<style scoped lang=\"scss\">\r\n.chat-box-list {\r\n  display: flex;\r\n  flex-direction: column;\r\n  list-style-type: none;\r\n  padding-bottom: 90px;\r\n}\r\n.chat-box-list-container {\r\n  overflow-y: scroll;\r\n  margin-bottom: 1px;\r\n  overflow-x: hidden;\r\n}\r\n.chat-box-list {\r\n  padding-left: 10px;\r\n  padding-right: 10px;\r\n  span {\r\n    padding: 8px;\r\n    color: white;\r\n    border-radius: 4px;\r\n  }\r\n  .Agent {\r\n    span {\r\n      background: #99cc00;\r\n      padding: 16px;\r\n      display: grid;\r\n    }\r\n    p {\r\n      float: right;\r\n    }\r\n  }\r\n  .client {\r\n    span {\r\n      background: #0070c8;\r\n      padding: 16px;\r\n      display: grid;\r\n    }\r\n    // p {\r\n    //   float: left;\r\n    // }\r\n  }\r\n}\r\n.Agent {\r\n  margin-right: auto !important;\r\n}\r\n.client {\r\n  margin-left: auto !important;\r\n}\r\n.header {\r\n  background: #6e27be;\r\n  color: #fff;\r\n  text-align: center;\r\n  padding: 40px;\r\n}\r\n.footer {\r\n  position: fixed;\r\n  bottom: 0;\r\n  width: 100%;\r\n  height: 50px;\r\n  text-align: center;\r\n  background-color: #ccc;\r\n}\r\n</style>\r\n"]}]}