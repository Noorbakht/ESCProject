{"remainingRequest":"C:\\Users\\noorb\\OneDrive\\Desktop\\ESCProject\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Users\\noorb\\OneDrive\\Desktop\\ESCProject\\node_modules\\vuetify-loader\\lib\\loader.js??ref--18-0!C:\\Users\\noorb\\OneDrive\\Desktop\\ESCProject\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\noorb\\OneDrive\\Desktop\\ESCProject\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\noorb\\OneDrive\\Desktop\\ESCProject\\src\\views\\Home.vue?vue&type=template&id=fae5bece&scoped=true&","dependencies":[{"path":"C:\\Users\\noorb\\OneDrive\\Desktop\\ESCProject\\src\\views\\Home.vue","mtime":1587376205191},{"path":"C:\\Users\\noorb\\OneDrive\\Desktop\\ESCProject\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\noorb\\OneDrive\\Desktop\\ESCProject\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\Users\\noorb\\OneDrive\\Desktop\\ESCProject\\node_modules\\vuetify-loader\\lib\\loader.js","mtime":1574476662000},{"path":"C:\\Users\\noorb\\OneDrive\\Desktop\\ESCProject\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\noorb\\OneDrive\\Desktop\\ESCProject\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}