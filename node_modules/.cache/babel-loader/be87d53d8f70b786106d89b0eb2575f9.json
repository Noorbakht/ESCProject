{"remainingRequest":"C:\\Users\\noorb\\OneDrive\\Desktop\\StarterKit-SDKWeb-VueJS-master\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\noorb\\OneDrive\\Desktop\\StarterKit-SDKWeb-VueJS-master\\node_modules\\vuetify-loader\\lib\\loader.js??ref--18-0!C:\\Users\\noorb\\OneDrive\\Desktop\\StarterKit-SDKWeb-VueJS-master\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\noorb\\OneDrive\\Desktop\\StarterKit-SDKWeb-VueJS-master\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\noorb\\OneDrive\\Desktop\\StarterKit-SDKWeb-VueJS-master\\src\\views\\ChatBot.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\noorb\\OneDrive\\Desktop\\StarterKit-SDKWeb-VueJS-master\\src\\views\\ChatBot.vue","mtime":1586771737998},{"path":"C:\\Users\\noorb\\OneDrive\\Desktop\\StarterKit-SDKWeb-VueJS-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\noorb\\OneDrive\\Desktop\\StarterKit-SDKWeb-VueJS-master\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\noorb\\OneDrive\\Desktop\\StarterKit-SDKWeb-VueJS-master\\node_modules\\vuetify-loader\\lib\\loader.js","mtime":1574476662000},{"path":"C:\\Users\\noorb\\OneDrive\\Desktop\\StarterKit-SDKWeb-VueJS-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\noorb\\OneDrive\\Desktop\\StarterKit-SDKWeb-VueJS-master\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["ChatBot.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div class=\"chat\">\r\n    <transition name=\"fade\">\r\n      <Loading v-bind:isConnecting=\"isConnecting\" v-if=\"!start\" />\r\n    </transition>\r\n    <div class=\"chatBox\" id=\"chatBox\" ref=\"chatBox\">\r\n      <header class=\"header\">\r\n        <span class=\"icon\">\r\n          <v-btn :to=\"{ name: 'Home' }\" x-large name=\"toHomebutton\" @click=\"endChat\">\r\n            <i id=\"fontHouse\" class=\"fas fa-house-user\" name=\"toHomebutton\" fa-4x>\r\n              <br />\r\n              <a>Home</a>\r\n            </i>\r\n          </v-btn>\r\n        </span>\r\n        <h2>Chatting</h2>\r\n      </header>\r\n      <!-- <div class=\"chatBox\" id=\"chatBox\" ref=\"chatBox\"> -->\r\n      <v-card flat class=\"chat-box-list-container\" ref=\"chatbox\" fluid>\r\n        <ul class=\"chat-box-list\" style=\"word-break: keep-all\">\r\n          <li v-for=\"message in messages\" :key=\"message.text\" v-bind:class=\"message.author\">\r\n            <p>\r\n              <v-container>\r\n                <span>{{ message.text }}</span>\r\n              </v-container>\r\n            </p>\r\n            <v-card-subtitle class=\"white--text text-right pr-2 pb-1\">\r\n              {{ message.author }}\r\n              {{ message.time }}\r\n            </v-card-subtitle>\r\n          </li>\r\n        </ul>\r\n      </v-card>\r\n      <!-- </div> -->\r\n      <v-footer id=\"footer\" fixed width=\"100%\">\r\n        <v-textarea\r\n          auto-grow\r\n          name=\"msgbox\"\r\n          rows=\"2\"\r\n          placeholder=\"Start typing...\"\r\n          filled\r\n          type=\"text\"\r\n          v-model=\"txt\"\r\n        />\r\n        <!-- <img :src=\"imageUrl\" class=\"img-fluid\" /> -->\r\n        <i class=\"fas fa-paperclip fa-2x fa-fw\" @click=\"onPickFile\"></i>\r\n        <i name=\"toCall\" class=\"fas fa-phone-square fa-3x\" @click=\"call\"></i>\r\n        <v-btn name=\"msgbutton\" right height=\"60px\" @click=\"sendMessage\">Send</v-btn>\r\n      </v-footer>\r\n      <input\r\n        type=\"file\"\r\n        style=\"display: none\"\r\n        ref=\"fileInput\"\r\n        id=\"fileUpload\"\r\n        accept=\"image/*\"\r\n        @change=\"onFilePicked\"\r\n      />\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport rainbowSDK from \"rainbow-web-sdk\";\r\nimport moment from \"moment\";\r\nimport axios from \"axios\";\r\nimport Loading from \"./Loading\";\r\n\r\nexport default {\r\n  name: \"Chatbot\",\r\n  props: [\"firstname\", \"lastname\"],\r\n  components: { Loading },\r\n  data: () => ({\r\n    agentId: \"\",\r\n    guestId: \"\",\r\n    file: \"\",\r\n    flag: false,\r\n    message: \"\",\r\n    icons: {\r\n      iconfont: \"md\"\r\n    },\r\n    imageUrl: \"\",\r\n    image: \"\",\r\n    txt: \"\",\r\n    skill: \"\",\r\n    isConnecting: false,\r\n    start: false,\r\n    selectedFile: \"\",\r\n    messages: [\r\n      {\r\n        text:\r\n          \"Type #support for help or type #availability to see the number of agents currently available.\",\r\n        author: \"Bank\",\r\n        time: moment().format(\"h:mm a\")\r\n      }\r\n    ],\r\n    conversation: \"\"\r\n  }),\r\n  created() {\r\n    console.log(this.$route.params);\r\n  },\r\n  methods: {\r\n    //changed all the this to self including this.conversation\r\n    gettingConnection: async function() {\r\n      let self = this;\r\n      try {\r\n        let response = await axios.get(\r\n          `https://limitless-sierra-11102.herokuapp.com/create_guest?firstName=${this.$route.params.firstname}&lastName=${this.$route.params.lastname}`\r\n        );\r\n        self.guestId = response.data.id;\r\n        self.email = response.data.loginEmail;\r\n        self.password = response.data.password;\r\n        console.log(\"this is guest id:\" + this.guestId);\r\n        console.log(this.email);\r\n        console.log(this.password);\r\n        if (this.guestId) {\r\n          this.gettingConvo();\r\n        } else {\r\n          console.log(\"can't find id\");\r\n        }\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    },\r\n    gettingConvo: async function() {\r\n      let self = this;\r\n      try {\r\n        await rainbowSDK.connection.signin(this.email, this.password);\r\n        console.log(\"signed in\");\r\n        //bot contact\r\n        let contact = await rainbowSDK.contacts.searchById(\r\n          \"5e3298a2e9f12730636949d2\"\r\n        );\r\n        console.log(contact);\r\n        //open conversation for bot\r\n        self.conversation = await rainbowSDK.conversations.openConversationForContact(\r\n          contact\r\n        );\r\n        console.log(self.conversation);\r\n        console.log(self.conversation.messages);\r\n        //detecting messages from bot\r\n        await rainbowSDK.im.getMessagesFromConversation(self.conversation);\r\n        document.addEventListener(\r\n          rainbowSDK.im.RAINBOW_ONNEWIMMESSAGERECEIVED,\r\n          self.receive\r\n        );\r\n        self.start = true;\r\n        document.addEventListener(\r\n          rainbowSDK.im.RAINBOW_ONNEWIMRECEIPTRECEIVED,\r\n          self.receipt\r\n        );\r\n        // let self = this;\r\n        console.log(this.guestId);\r\n        //get token id from agent backend\r\n        // self.email = \"agent1@sutd.edu.sg\";\r\n        // self.password = \"P@ssword123\";\r\n        while (this.flag == false) {\r\n          try {\r\n            let response = await axios.get(\r\n              `https://limitless-sierra-11102.herokuapp.com/establish_connection?id=${this.guestId}`\r\n            );\r\n            if (response.data.connection == true) {\r\n              this.flag = true;\r\n              console.log(this.agentId);\r\n              this.agentComeIn();\r\n            }\r\n          } catch (err) {\r\n            console.log(err);\r\n          }\r\n        }\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    },\r\n    agentComeIn: async function() {\r\n      document.removeEventListener(\r\n        rainbowSDK.im.RAINBOW_ONNEWIMMESSAGERECEIVED,\r\n        self.receive\r\n      );\r\n      document.removeEventListener(\r\n        rainbowSDK.im.RAINBOW_ONNEWIMRECEIPTRECEIVED,\r\n        self.receipt\r\n      );\r\n      let self = this;\r\n      let response = await axios.get(\r\n        `https://limitless-sierra-11102.herokuapp.com/establish_connection?id=${this.guestId}`\r\n      );\r\n      console.log(response.data.agentId);\r\n      console.log(response.data.connection);\r\n      console.log(response.data.skill);\r\n      this.skill = response.data.skill;\r\n      console.log(response);\r\n      self.agentId = response.data.agentId;\r\n      console.log(self.agentId);\r\n      let contact = await rainbowSDK.contacts.searchById(self.agentId);\r\n      console.log(contact);\r\n      self.conversation = await rainbowSDK.conversations.openConversationForContact(\r\n        contact\r\n      );\r\n      console.log(self.conversation);\r\n      console.log(self.conversation.messages);\r\n      await rainbowSDK.im.sendMessageToConversation(\r\n        this.conversation,\r\n        `Hello, I am ${this.$route.params.firstname} and I need help in ${this.skill} `\r\n      );\r\n      await rainbowSDK.im.getMessagesFromConversation(this.conversation);\r\n      document.addEventListener(\r\n        rainbowSDK.im.RAINBOW_ONNEWIMMESSAGERECEIVED,\r\n        self.receive1\r\n      );\r\n      document.addEventListener(\r\n        rainbowSDK.im.RAINBOW_ONNEWIMRECEIPTRECEIVED,\r\n        self.receipt\r\n      );\r\n    },\r\n    call() {\r\n      // this.$alert(\"Do you want to call your agent?\");\r\n      this.$confirm(\"Do you want to call the agent?\").then(() => {\r\n        //do something...\r\n        this.callingAgent();\r\n      });\r\n    },\r\n    callingAgent: async function() {\r\n      console.log(this.agentId);\r\n      let self = this;\r\n      let response = await axios.get(\r\n        `https://limitless-sierra-11102.herokuapp.com/create_guest?firstName=${this.$route.params.firstname}&lastName=${this.$route.params.lastname}`\r\n      );\r\n      self.guestId = response.data.id;\r\n      console.log(self.guestId);\r\n      let response1 = await axios.get(\r\n        `https://limitless-sierra-11102.herokuapp.com/establish_connection?id=${this.guestId}`\r\n      );\r\n      console.log(response1.data.connection);\r\n      self.agentId = response1.data.agentId;\r\n      console.log(self.agentId);\r\n      this.checkCall();\r\n      this.startCall();\r\n      // this.$router.push({\r\n      //     name: \"call\",\r\n      //     params: { agentId: self.agentId }\r\n      // });\r\n    },\r\n    checkCall: function() {\r\n      if (rainbowSDK.webRTC.canMakeAudioVideoCall()) {\r\n        console.log(\"Browser supports calls\");\r\n      } else {\r\n        console.log(\"Browser does not support calls\");\r\n      }\r\n      navigator.mediaDevices\r\n        .getUserMedia({ audio: true })\r\n        .then(function(stream) {\r\n          stream.getTracks().forEach(function(track) {\r\n            track.stop();\r\n          });\r\n          navigator.mediaDevices\r\n            .enumerateDevices()\r\n            .then(function(devices) {\r\n              devices.forEach(function(device) {\r\n                if (device.deviceId === \"default\") {\r\n                  console.log(device);\r\n                  console.log(device.label, \"is available\");\r\n                }\r\n              });\r\n            })\r\n            .catch(function(error) {\r\n              console.log(error);\r\n            });\r\n          rainbowSDK.webRTC.useMicrophone(\"default\");\r\n          rainbowSDK.webRTC.useSpeaker(\"default\");\r\n        })\r\n        .catch(function(error) {\r\n          console.log(error);\r\n        });\r\n    },\r\n    startCall: async function() {\r\n      let self = this;\r\n      try {\r\n        console.log(this.agentId);\r\n        let contact = await rainbowSDK.contacts.searchById(this.agentId);\r\n        var res = rainbowSDK.webRTC.callInAudio(contact); //start to call the contact with available agent\r\n        if (res.label === \"OK\") {\r\n          console.log(\"calling\");\r\n        }\r\n        self.start = true;\r\n        document.addEventListener(\r\n          rainbowSDK.webRTC.RAINBOW_ONWEBRTCCALLSTATECHANGED,\r\n          self.onWebRTCCallChanged\r\n        );\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    },\r\n    onWebRTCCallChanged: async function(event) {\r\n      let self = this;\r\n      self.call = event.detail;\r\n      console.log(\"OnWebRTCCallChanged event\", event.detail.status);\r\n      if (event.detail.status.value === \"Unknown\") {\r\n        document.removeEventListener(\r\n          rainbowSDK.webRTC.RAINBOW_ONWEBRTCCALLSTATECHANGED,\r\n          self.onWebRTCCallChanged\r\n        );\r\n        if (self.exit) {\r\n          await self.$router.push({ name: \"chatbot\" });\r\n        }\r\n      }\r\n    },\r\n    endCall: async function() {\r\n      let self = this;\r\n      self.exit = true;\r\n      await rainbowSDK.webRTC.release(self.call);\r\n      console.log(\"Session Ended\");\r\n    },\r\n    moveToChat: async function() {\r\n      console.log(\"moving to chat\");\r\n      await rainbowSDK.webRTC.release(this.call);\r\n      await this.$router.push({ name: \"chatbot\" });\r\n    },\r\n    sendMessage() {\r\n      let self = this;\r\n      if (self.txt != \"\") {\r\n        let message = self.txt;\r\n        rainbowSDK.im.sendMessageToConversation(self.conversation, message);\r\n        self.messages.push({\r\n          text: message,\r\n          author: \"client\",\r\n          time: moment().format(\"h:mm a\")\r\n        });\r\n      }\r\n    },\r\n    //when message received\r\n    receive: function(event) {\r\n      let self = this;\r\n      console.log(event.detail.message.data);\r\n      console.log(event.detail.message.side);\r\n      self.messages.push({\r\n        text: event.detail.message.data,\r\n        author: \"Bank\",\r\n        time: moment().format(\"h:mm a\")\r\n      });\r\n    },\r\n    receive1: function(event) {\r\n      let self = this;\r\n      console.log(event.detail.message.data);\r\n      console.log(event.detail.message.side);\r\n      self.messages.push({\r\n        text: event.detail.message.data,\r\n        author: \"Agent\",\r\n        time: moment().format(\"h:mm a\")\r\n      });\r\n    },\r\n    //when you send out message\r\n    receipt: function(event) {\r\n      console.log(\"receipt\");\r\n      console.log(event.detail.message.data);\r\n      console.log(event.detail.message.side);\r\n    },\r\n    onPickFile() {\r\n      this.$refs.fileInput.click();\r\n    },\r\n    onFilePicked: function(event) {\r\n      let self = this;\r\n      console.log(this.conversation);\r\n      const files = event.target.files;\r\n      let filename = files[0].name;\r\n      if (filename.lastIndexOf(\".\") <= 0) {\r\n        return alert(\"Please find a valid file input\");\r\n      }\r\n      const fileReader = new FileReader();\r\n      fileReader.addEventListener(\"load\", () => {\r\n        this.imageUrl = fileReader.result;\r\n      });\r\n      fileReader.readAsDataURL(files[0]);\r\n      this.image = files[0];\r\n      let inputElement = document.getElementById(\"fileUpload\");\r\n      console.log(inputElement);\r\n      inputElement.addEventListener(\"change\", handleFiles, false);\r\n      // eslint-disable-next-line no-unused-vars\r\n      let file;\r\n      function handleFiles() {\r\n        console.log(\"a file is chosen\");\r\n        file = inputElement.files[0];\r\n        // let file = inputElement.files[0];\r\n        // console.log(this.file);\r\n        // file = files[0];\r\n        self.image = files[0];\r\n        // file = files[0];\r\n        console.log(self.image);\r\n        // console.log(file);\r\n      }\r\n      console.log(self.conversation);\r\n      return rainbowSDK.fileStorage\r\n        .uploadFileToConversation(self.conversation, self.image, \"My message\")\r\n        .then(function(message) {\r\n          console.log(\"file send\");\r\n          console.log(message);\r\n          let onNewMessageReceived = function(event) {\r\n            // console.log(event.message.fieldId);s\r\n            // console.log(event);\r\n            let message = event.detail.message;\r\n            let conversation = event.detail.conversation;\r\n            let cc = event.detail.cc;\r\n            console.log(conversation);\r\n            console.log(cc);\r\n            console.log(message);\r\n            if (message.fileId) {\r\n              let fileDescriptor = rainbowSDK.fileStorage.getFileDescriptorFromId(\r\n                message.fileId\r\n              );\r\n              console.log(fileDescriptor);\r\n            }\r\n          };\r\n          rainbowSDK.im.sendMessageToConversation(this.conversation, message);\r\n          document.addEventListener(\r\n            rainbowSDK.im.RAINBOW_ONNEWIMMESSAGERECEIVED,\r\n            onNewMessageReceived\r\n          );\r\n          console.log(event);\r\n        })\r\n        .catch(function(err) {\r\n          console.log(err);\r\n        });\r\n      //         console.log(event);\r\n      //         let onNewMessageReceived = function(event) {\r\n      //           console.log(event.message.fieldId);\r\n      //           console.log(event);\r\n      //           console.log(message);\r\n      //           if (message.fileId) {\r\n      //             let fileDescriptor = rainbowSDK.fileStorage.getFileDescriptorFromId(\r\n      //               message.fileId\r\n      //             );\r\n      //             console.log(fileDescriptor);\r\n      //           }\r\n      //         };\r\n      //         document.addEventListener(\r\n      //           rainbowSDK.im.RAINBOW_ONNEWIMMESSAGERECEIVED,\r\n      //           onNewMessageReceived\r\n      //         );\r\n      //         rainbowSDK.fileStorage\r\n      //           .getFilesSentInConversation(this.conversation)\r\n      //           .then(function(files) {\r\n      //             // Do something with the list of files received in a conversation\r\n      //             console.log(files);\r\n      //           });\r\n    }\r\n  },\r\n  // rainbowSDK.fileStorage\r\n  //   .getFilesReceivedInConversation(this.conversation)\r\n  //   .then(function(files) {\r\n  //     // Do something with the list of files received in a conversation\r\n  //     console.log(files);\r\n  //   });\r\n  // rainbowSDK.fileStorage\r\n  //   .getFilesSentInConversation(this.conversation)\r\n  //   .then(function(files) {\r\n  //     // Do something with the list of files sent in a conversation\r\n  //     console.log(files);\r\n  //   });\r\n\r\n  // document.addEventListener(rainbowSDK.FileStorage.RAINBOW_ONFILEUPLOADED);\r\n  mounted() {\r\n    const self = this;\r\n    window.addEventListener(\"keyup\", function(event) {\r\n      if (event.keyCode == 13) {\r\n        self.sendMessage();\r\n      }\r\n    });\r\n    self.gettingConnection();\r\n  }\r\n};\r\n</script>\r\n<style scoped lang=\"scss\">\r\n.chat-box-list {\r\n  display: flex;\r\n  flex-direction: column;\r\n  list-style-type: none;\r\n  padding-bottom: 90px;\r\n}\r\n.chat-box-list-container {\r\n  overflow-y: scroll;\r\n  margin-bottom: 1px;\r\n  overflow-x: hidden;\r\n}\r\n.chat-box-list {\r\n  padding-left: 10px;\r\n  padding-right: 10px;\r\n  span {\r\n    padding: 8px;\r\n    color: white;\r\n    border-radius: 4px;\r\n  }\r\n  .Bank {\r\n    span {\r\n      background: #99cc00;\r\n      padding: 16px;\r\n      display: grid;\r\n    }\r\n    p {\r\n      float: right;\r\n    }\r\n  }\r\n  .client {\r\n    span {\r\n      background: #0070c8;\r\n      padding: 16px;\r\n      display: grid;\r\n    }\r\n    // p {\r\n    //   float: left;\r\n    // }\r\n  }\r\n  .Agent {\r\n    span {\r\n      background: salmon;\r\n      padding: 16px;\r\n      display: grid;\r\n    }\r\n    // p {\r\n    //   float: left;\r\n    // }\r\n  }\r\n}\r\n.Bank {\r\n  margin-right: auto !important;\r\n}\r\n.client {\r\n  margin-left: auto !important;\r\n}\r\n.Agent {\r\n  margin-right: auto !important;\r\n}\r\n.header {\r\n  background: #6e27be;\r\n  color: #fff;\r\n  text-align: center;\r\n  padding: 20px;\r\n}\r\n.footer {\r\n  position: fixed;\r\n  bottom: 0;\r\n  width: 100%;\r\n  height: 50px;\r\n  text-align: center;\r\n  background-color: #ccc;\r\n}\r\n.icon {\r\n  margin-right: 6000px;\r\n  font-size: 80px;\r\n  height: 20px;\r\n  vertical-align: middle;\r\n  padding: 40px 45px 40px 35px;\r\n  line-height: 5px !important;\r\n  top: 80px;\r\n  position: relative;\r\n}\r\n.icon2 {\r\n  margin-left: 1500px;\r\n  font-size: 80px;\r\n  height: 20px;\r\n  vertical-align: middle;\r\n  padding: 40px 45px 40px 35px;\r\n  line-height: 5px !important;\r\n  top: 30px;\r\n  position: relative;\r\n}\r\n</style>\r\n"],"sourceRoot":"src/views"}]}