{"remainingRequest":"C:\\Users\\noorb\\OneDrive\\Desktop\\StarterKit-SDKWeb-VueJS-master\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\noorb\\OneDrive\\Desktop\\StarterKit-SDKWeb-VueJS-master\\node_modules\\vuetify-loader\\lib\\loader.js??ref--18-0!C:\\Users\\noorb\\OneDrive\\Desktop\\StarterKit-SDKWeb-VueJS-master\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\noorb\\OneDrive\\Desktop\\StarterKit-SDKWeb-VueJS-master\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\noorb\\OneDrive\\Desktop\\StarterKit-SDKWeb-VueJS-master\\src\\views\\ChatBot.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\noorb\\OneDrive\\Desktop\\StarterKit-SDKWeb-VueJS-master\\src\\views\\ChatBot.vue","mtime":1587090691779},{"path":"C:\\Users\\noorb\\OneDrive\\Desktop\\StarterKit-SDKWeb-VueJS-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\noorb\\OneDrive\\Desktop\\StarterKit-SDKWeb-VueJS-master\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\noorb\\OneDrive\\Desktop\\StarterKit-SDKWeb-VueJS-master\\node_modules\\vuetify-loader\\lib\\loader.js","mtime":1574476662000},{"path":"C:\\Users\\noorb\\OneDrive\\Desktop\\StarterKit-SDKWeb-VueJS-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\noorb\\OneDrive\\Desktop\\StarterKit-SDKWeb-VueJS-master\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["ChatBot.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div class=\"chat\">\r\n    <transition name=\"fade\">\r\n      <Loading v-bind:isConnecting=\"isConnecting\" v-if=\"!start\" />\r\n    </transition>\r\n    <div class=\"chatBox\" id=\"chatBox\" ref=\"chatBox\">\r\n      <header class=\"header\">\r\n        <span class=\"icon\">\r\n          <v-btn x-large name=\"toHomebutton\" @click=\"endChat\">\r\n            <i id=\"fontHouse\" class=\"fas fa-house-user\" name=\"toHomebutton\" fa-4x>\r\n              <br />\r\n              <a>Home</a>\r\n            </i>\r\n          </v-btn>\r\n        </span>\r\n        <p class=\"font-italic\" />\r\n        <h2>Chatting</h2>\r\n      </header>\r\n      <!-- <h2>Chatting</h2> -->\r\n      <v-card flat class=\"chat-box-list-container\" ref=\"chatbox\" fluid>\r\n        <ul class=\"chat-box-list\" style=\"word-break: keep-all\">\r\n          <li v-for=\"message in messages\" :key=\"message.text\" v-bind:class=\"message.author\">\r\n            <p>\r\n              <v-container>\r\n                <span>{{ message.text }}</span>\r\n              </v-container>\r\n            </p>\r\n            <v-card-subtitle class=\"white--text text-right pr-2 pb-1\">\r\n              {{ message.author }}\r\n              {{ message.time }}\r\n            </v-card-subtitle>\r\n          </li>\r\n        </ul>\r\n      </v-card>\r\n      <v-footer id=\"footer\" fixed width=\"100%\">\r\n        <v-textarea\r\n          auto-grow\r\n          name=\"msgbox\"\r\n          rows=\"2\"\r\n          placeholder=\"Start typing...\"\r\n          filled\r\n          type=\"text\"\r\n          v-model=\"txt\"\r\n        />\r\n        <!-- <img :src=\"imageUrl\" class=\"img-fluid\" /> -->\r\n        <!-- <i class=\"fas fa-paperclip fa-2x fa-fw\" @click=\"onPickFile\"></i>\r\n        <input\r\n          type=\"file\"\r\n          style=\"display: none\"\r\n          ref=\"fileInput\"\r\n          id=\"fileUpload\"\r\n          accept=\"image/*\"\r\n          @change=\"onFilePicked\"\r\n        />-->\r\n        <i name=\"toCall\" class=\"fas fa-phone-square fa-3x\" @click=\"call\"></i>\r\n        <v-btn name=\"msgbutton\" right height=\"60px\" @click=\"sendMessage\">Send</v-btn>\r\n      </v-footer>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport rainbowSDK from \"rainbow-web-sdk\";\r\nimport moment from \"moment\";\r\nimport axios from \"axios\";\r\nimport Loading from \"./Loading\";\r\n// import $ from \"jquery\";\r\n\r\nexport default {\r\n  name: \"Chatbot\",\r\n  props: [\"firstname\", \"lastname\"],\r\n  components: { Loading },\r\n  data: () => ({\r\n    agentId: \"\",\r\n    guestId: \"\",\r\n    file: \"\",\r\n    flag: false,\r\n    message: \"\",\r\n    icons: {\r\n      iconfont: \"md\"\r\n    },\r\n    imageUrl: \"\",\r\n    image: \"\",\r\n    txt: \"\",\r\n    skill: \"\",\r\n    isConnecting: false,\r\n    start: false,\r\n    selectedFile: \"\",\r\n    messages: [\r\n      {\r\n        text:\r\n          \"Type #support for help or type #availability to see the number of agents currently available.\",\r\n        author: \"Bank\",\r\n        time: moment().format(\"h:mm a\"),\r\n        image: \"\"\r\n      }\r\n    ],\r\n    conversation: \"\"\r\n  }),\r\n  created() {\r\n    console.log(this.$store.state.count);\r\n    console.log(this.$route.params);\r\n    this.gettingConnection();\r\n  },\r\n  methods: {\r\n    //changed all the this to self including this.conversation\r\n    gettingConnection: async function() {\r\n      let self = this;\r\n      try {\r\n        let response = await axios.get(\r\n          `https://limitless-sierra-11102.herokuapp.com/create_guest?firstName=${this.$route.params.firstname}&lastName=${this.$route.params.lastname}`\r\n        );\r\n        self.guestId = response.data.id;\r\n        self.email = response.data.loginEmail;\r\n        self.password = response.data.password;\r\n        console.log(\"this is guest id:\" + this.guestId);\r\n        console.log(this.email);\r\n        console.log(this.password);\r\n        if (this.guestId) {\r\n          this.gettingConvo();\r\n        } else {\r\n          console.log(\"can't find id\");\r\n        }\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    },\r\n    gettingConvo: async function() {\r\n      let self = this;\r\n      try {\r\n        await rainbowSDK.connection.signin(this.email, this.password);\r\n        console.log(\"signed in\");\r\n        //bot contact\r\n        let contact = await rainbowSDK.contacts.searchById(\r\n          \"5e3298a2e9f12730636949d2\"\r\n        );\r\n        console.log(contact);\r\n        //open conversation for bot\r\n        self.conversation = await rainbowSDK.conversations.openConversationForContact(\r\n          contact\r\n        );\r\n        console.log(self.conversation);\r\n        console.log(self.conversation.messages);\r\n        //detecting messages from bot\r\n        await rainbowSDK.im.getMessagesFromConversation(self.conversation);\r\n        document.addEventListener(\r\n          rainbowSDK.im.RAINBOW_ONNEWIMMESSAGERECEIVED,\r\n          self.receive\r\n        );\r\n        self.start = true;\r\n        document.addEventListener(\r\n          rainbowSDK.im.RAINBOW_ONNEWIMRECEIPTRECEIVED,\r\n          self.receipt\r\n        );\r\n        // let self = this;\r\n        console.log(this.guestId);\r\n        //get token id from agent backend\r\n        // self.email = \"agent1@sutd.edu.sg\";\r\n        // self.password = \"P@ssword123\";\r\n        while (this.flag == false) {\r\n          try {\r\n            let response = await axios.get(\r\n              `https://limitless-sierra-11102.herokuapp.com/establish_connection?id=${this.guestId}`\r\n            );\r\n            if (response.data.connection == true) {\r\n              this.flag = true;\r\n              this.agentComeIn();\r\n            }\r\n          } catch (err) {\r\n            console.log(err);\r\n          }\r\n        }\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    },\r\n    scrollToEnd() {\r\n      var content = this.$refs.chatbox;\r\n      content.scrollTop = content.scrollHeight;\r\n    },\r\n    endChat: async function() {\r\n      let self = this;\r\n      this.$store.state.agentId = \"\";\r\n      console.log(this.$store.state.agentId);\r\n      await rainbowSDK.conversations.closeConversation(self.conversation);\r\n      console.log(\"closing\");\r\n    },\r\n    agentComeIn: async function() {\r\n      let self = this;\r\n\r\n      // document.removeEventListener(\r\n      //   rainbowSDK.im.RAINBOW_ONNEWIMRECEIPTRECEIVED,\r\n      //   self.receipt\r\n      // );\r\n      let response = await axios.get(\r\n        `https://limitless-sierra-11102.herokuapp.com/establish_connection?id=${this.guestId}`\r\n      );\r\n      console.log(response.data.agentId);\r\n      console.log(response.data.connection);\r\n      console.log(response.data.skill);\r\n      this.$store.state.agentId = response.data.agentId;\r\n      console.log(this.$store.state.agentId);\r\n      this.skill = response.data.skill;\r\n      console.log(response);\r\n      self.agentId = response.data.agentId;\r\n      console.log(self.agentId);\r\n      let contact = await rainbowSDK.contacts.searchById(self.agentId);\r\n      console.log(contact);\r\n      self.conversation = await rainbowSDK.conversations.openConversationForContact(\r\n        contact\r\n      );\r\n      console.log(self.conversation);\r\n      console.log(self.conversation.messages);\r\n      await rainbowSDK.im.sendMessageToConversation(\r\n        this.conversation,\r\n        `Hello, I am ${this.$route.params.firstname} and I need help in ${this.skill} `\r\n      );\r\n      document.removeEventListener(\r\n        rainbowSDK.im.RAINBOW_ONNEWIMMESSAGERECEIVED,\r\n        self.receive\r\n      );\r\n      await rainbowSDK.im.getMessagesFromConversation(this.conversation);\r\n      document.addEventListener(\r\n        rainbowSDK.im.RAINBOW_ONNEWIMMESSAGERECEIVED,\r\n        self.receive1\r\n      );\r\n      document.addEventListener(\r\n        rainbowSDK.im.RAINBOW_ONNEWIMRECEIPTRECEIVED,\r\n        self.receipt\r\n      );\r\n    },\r\n    call() {\r\n      // this.$alert(\"Do you want to call your agent?\");\r\n      this.$confirm(\r\n        \"Do you want to call the agent instead to assist you?\"\r\n      ).then(() => {\r\n        //do something...\r\n        this.callingAgent();\r\n      });\r\n    },\r\n    callingAgent: async function() {\r\n      console.log(this.$store.state.agentId);\r\n      this.$router.push({\r\n        name: \"call\"\r\n      });\r\n    },\r\n    sendMessage() {\r\n      let self = this;\r\n      if (self.txt != \"\") {\r\n        let message = self.txt;\r\n        rainbowSDK.im.sendMessageToConversation(self.conversation, message);\r\n        self.messages.push({\r\n          text: message,\r\n          author: \"client\",\r\n          time: moment().format(\"h:mm a\")\r\n        });\r\n        self.txt = \"\";\r\n      }\r\n    },\r\n    //when message received\r\n    receive: function(event) {\r\n      let self = this;\r\n      rainbowSDK.im.markMessageFromConversationAsRead(\r\n        event.detail.conversation,\r\n        event.detail.message\r\n      );\r\n      console.log(event.detail.message.data);\r\n      console.log(event.detail.message.side);\r\n      self.messages.push({\r\n        text: event.detail.message.data,\r\n        author: \"Bank\",\r\n        time: moment().format(\"h:mm a\")\r\n      });\r\n    },\r\n    receive1: function(event) {\r\n      let self = this;\r\n      console.log(event.detail.message.data);\r\n      console.log(event.detail.message.side);\r\n      self.messages.push({\r\n        text: event.detail.message.data,\r\n        author: \"Agent\",\r\n        time: moment().format(\"h:mm a\")\r\n      });\r\n    },\r\n    //when you send out message\r\n    receipt: function(event) {\r\n      console.log(\"receipt\");\r\n      console.log(event.detail.message.data);\r\n      console.log(event.detail.message.side);\r\n    },\r\n    saveToFile: function(blob, filename) {\r\n      var url = window.URL.createObjectURL(blob);\r\n      var a = document.createElement(\"a\");\r\n      document.body.appendChild(a);\r\n      a.style = \"display: none\";\r\n      a.href = url;\r\n      a.download = filename;\r\n      a.click();\r\n      window.URL.revokeObjectURL(url);\r\n    },\r\n    onPickFile() {\r\n      this.$refs.fileInput.click();\r\n    },\r\n    onFilePicked: function(event) {\r\n      let self = this;\r\n      const files = event.target.files;\r\n      let filename = files[0].name;\r\n      if (filename.lastIndexOf(\".\") <= 0) {\r\n        return alert(\"Please find a valid file input\");\r\n      }\r\n      const fileReader = new FileReader();\r\n      fileReader.addEventListener(\"load\", () => {\r\n        this.imageUrl = fileReader.result;\r\n      });\r\n      fileReader.readAsDataURL(files[0]);\r\n      this.image = files[0];\r\n      let inputElement = document.getElementById(\"fileUpload\");\r\n      console.log(inputElement);\r\n      inputElement.addEventListener(\"change\", handleFiles, false);\r\n      // eslint-disable-next-line no-unused-vars\r\n      let file;\r\n      function handleFiles() {\r\n        console.log(\"a file is chosen\");\r\n        file = inputElement.files[0];\r\n        self.image = files[0];\r\n        console.log(self.image);\r\n      }\r\n      console.log(self.conversation);\r\n      let message = rainbowSDK.fileStorage.uploadFileToConversation(\r\n        self.conversation,\r\n        self.image,\r\n        \"My message\"\r\n      );\r\n      console.log(\"file send\");\r\n      rainbowSDK.im.sendMessageToConversation(self.conversation, message);\r\n      document.addEventListener(\r\n        rainbowSDK.im.RAINBOW_ONNEWIMMESSAGERECEIVED,\r\n        self.onNewMessageReceived\r\n      );\r\n    },\r\n    onNewMessageReceived: function(event, message, conversation) {\r\n      let self = this;\r\n      console.log(event);\r\n      console.log(conversation);\r\n      // console.log(cc);\r\n      console.log(self.conversation.messages);\r\n      if (message.fileId) {\r\n        let fileDescriptor = rainbowSDK.fileStorage.getFileDescriptorFromId(\r\n          message.fileId\r\n        );\r\n        rainbowSDK.fileStorage\r\n          .downloadFile(fileDescriptor)\r\n          .then(function(blob) {\r\n            // Download the file on disk\r\n            self.saveToFile(blob, fileDescriptor.fileName);\r\n          })\r\n          .catch(function(err) {\r\n            // Do something in case of error\r\n            console.log(err);\r\n          });\r\n        console.log(fileDescriptor);\r\n      }\r\n    }\r\n    //     });\r\n    //         console.log(event);\r\n    //         let onNewMessageReceived = function(event) {\r\n    //           console.log(event.message.fieldId);\r\n    //           console.log(event);\r\n    //           console.log(message);\r\n    //           if (message.fileId) {\r\n    //             let fileDescriptor = rainbowSDK.fileStorage.getFileDescriptorFromId(\r\n    //               message.fileId\r\n    //             );\r\n    //             console.log(fileDescriptor);\r\n    //           }\r\n    //         };\r\n    //         document.addEventListener(\r\n    //           rainbowSDK.im.RAINBOW_ONNEWIMMESSAGERECEIVED,\r\n    //           onNewMessageReceived\r\n    //         );\r\n    //         rainbowSDK.fileStorage\r\n    //           .getFilesSentInConversation(this.conversation)\r\n    //           .then(function(files) {\r\n    //             // Do something with the list of files received in a conversation\r\n    //             console.log(files);\r\n    //           });\r\n  },\r\n  // rainbowSDK.fileStorage\r\n  //   .getFilesReceivedInConversation(this.conversation)\r\n  //   .then(function(files) {\r\n  //     // Do something with the list of files received in a conversation\r\n  //     console.log(files);\r\n  //   });\r\n  // rainbowSDK.fileStorage\r\n  //   .getFilesSentInConversation(this.conversation)\r\n  //   .then(function(files) {\r\n  //     // Do something with the list of files sent in a conversation\r\n  //     console.log(files);\r\n  //   });\r\n\r\n  // document.addEventListener(rainbowSDK.FileStorage.RAINBOW_ONFILEUPLOADED);\r\n  mounted() {\r\n    const self = this;\r\n    window.addEventListener(\"keyup\", function(event) {\r\n      if (event.keyCode == 13) {\r\n        self.sendMessage();\r\n      }\r\n    });\r\n    this.scrollToEnd();\r\n  },\r\n  updated() {\r\n    // This will be called when the component updates\r\n    // try toggling a todo\r\n    this.scrollToEnd();\r\n  }\r\n};\r\n</script>\r\n\r\n\r\n<style scoped lang=\"scss\">\r\n.chat-box-list {\r\n  display: flex;\r\n  flex-direction: column;\r\n  list-style-type: none;\r\n  padding-bottom: 90px;\r\n}\r\n.chat-box-list-container {\r\n  overflow-y: scroll;\r\n  scrollbar-width: auto;\r\n  margin-bottom: 1px;\r\n  overflow-x: hidden;\r\n}\r\n.chat-box-list {\r\n  padding-left: 10px;\r\n  padding-right: 10px;\r\n  span {\r\n    padding: 8px;\r\n    color: white;\r\n    border-radius: 4px;\r\n  }\r\n  .Bank {\r\n    span {\r\n      background: #937cca;\r\n      padding: 16px;\r\n      display: grid;\r\n    }\r\n    p {\r\n      float: right;\r\n    }\r\n  }\r\n  .client {\r\n    span {\r\n      background: #48d382;\r\n      padding: 16px;\r\n      display: grid;\r\n    }\r\n    // p {\r\n    //   float: left;\r\n    // }\r\n  }\r\n  .Agent {\r\n    span {\r\n      background: salmon;\r\n      padding: 16px;\r\n      display: grid;\r\n    }\r\n    // p {\r\n    //   float: left;\r\n    // }\r\n  }\r\n}\r\n.Bank {\r\n  margin-right: auto !important;\r\n}\r\n.client {\r\n  margin-left: auto !important;\r\n}\r\n.Agent {\r\n  margin-right: auto !important;\r\n}\r\n.header {\r\n  background: rgb(2, 106, 167);\r\n  color: #fff;\r\n  text-align: center;\r\n  padding: 20px;\r\n}\r\n.footer {\r\n  position: fixed;\r\n  bottom: 0;\r\n  width: 100%;\r\n  height: 50px;\r\n  text-align: center;\r\n  background-color: #ccc;\r\n}\r\n.icon {\r\n  margin-right: 6000px;\r\n  font-size: 80px;\r\n  height: 20px;\r\n  vertical-align: middle;\r\n  padding: 40px 45px 40px 35px;\r\n  line-height: 5px !important;\r\n  top: 40px;\r\n  position: relative;\r\n}\r\n.icon2 {\r\n  margin-left: 1500px;\r\n  font-size: 80px;\r\n  height: 20px;\r\n  vertical-align: middle;\r\n  padding: 40px 45px 40px 35px;\r\n  line-height: 5px !important;\r\n  top: 30px;\r\n  position: relative;\r\n}\r\n</style>\r\n"],"sourceRoot":"src/views"}]}